#!/bin/bash
isroot() { if [ "$(id -u)" != 0 ]; then
	echo "This action must be performed as root"
	exit 1
fi; }
active_dir="/var/lib/mail_tty"
if [ ! -d "$active_dir" ]; then
	isroot
	mkdir -p $active_dir
	chmod -R 777 $active_dir
	exit 0
fi
genrandom() {
	openssl rand -hex 100
}
user="$(whoami)"
[ -f $HOME/.mail_tty.prv ] && KEY="$(cat $HOME/.mail_tty.prv)" || KEY=""
[ -f $HOME/.mail_tty.pub ] && PUB_EX=1
echo -e "mail_tty client \e[0;32mv1\e[0m"
if [ ! -d "$active_dir"/$user.conf ]; then
	echo "Initialization the setting for the $user..."
	mkdir "$active_dir"/$user
	mkdir "$active_dir"/$user.conf
	mkdir "$active_dir"/$user/private
	mkdir "$active_dir"/$user/public
	chown -R $user: "$active_dir"/$user.conf
	chown -R $user: "$active_dir"/$user/{public,private}
	chmod 705 "$active_dir"/$user.conf
	chmod 700 "$active_dir"/$user/private
	chmod 707 "$active_dir"/$user/public
	touch "$active_dir"/$user.conf/journal
	chmod 700 "$active_dir"/$user.conf/journal
	touch "$active_dir"/$user.conf/public_keys
	chmod 704 "$active_dir"/$user.conf/public_keys
	until [ -n "$private_key" ]; do
		read -rps "Enter the password for the private messages directory of user $user: " private_key
		if [ -z "$private_key" ]; then
			echo "key not entered"
			continue
		fi
		genrandom | openssl enc -k "$private_key" -aes256 -base64 -A -e -in - -out $active_dir/$user.conf/passphrase -pbkdf2
	done
	echo "Configuration done!"
fi
check_private_key() {
	if ! openssl enc -d -k "$entered_key" -aes256 -base64 -A -in "$active_dir"/$user.conf/passphrase -pbkdf2 &>/dev/null; then
		echo "Incorrect private encryption key entered"
		exit 2
	fi
}
check_public_key() {
	if ! grep -o "^$public_user .*" "$active_dir"/$user.conf/public_keys | cut -d " " -f 2 | openssl enc -k "$public_key" -aes256 -base64 -A -d -in - -pbkdf2 &>/dev/null; then
		echo "Incorrect public encryption key entered"
		exit 2
	fi
}
check_public_send_key() {
	if ! grep -o "^$user .*" "$active_dir"/$public_user.conf/public_keys | cut -d " " -f 2 | openssl enc -k "$public_key" -aes256 -base64 -A -d -in - -pbkdf2 &>/dev/null; then
		echo "Incorrect public encryption key of recipient entered"
		exit 7
	fi
}
ask_private_key() {
	if [ -n "$KEY" ]; then entered_key="$KEY"; else
		read -rps "Enter your private key: " entered_key
		if [ -z "$entered_key" ]; then
			echo "No encryption key entered"
			exit 3
		fi
	fi
}
ask_public_key() {
	if [ -n "$PUBKEY" ]; then public_key="$PUBKEY"; else
		read -rps "Enter your public key for user $author: " public_key
		if [ -z "$public_key" ]; then
			echo "No encryption key entered"
			exit 3
		fi
	fi
}
case "$1" in
	help)
		cat <<EOF
usage: mail [action] [user/letter]

  Actions:
    listpub		List all publically available messages from other users
    listprv		List all private messages from you to other users
    addpub [name]	Add public key for user N
    rempub [name]	Remove public key for user N
    rmmsg [pub/prv]	Remove message(s) (public or private)
    write [user]	Write a message to another user
    readpub [ID]	Read a public message from another user
    readprv [ID]	Read a message you sent to someone
    keys		Show all public keys

mail_tty - a simple local mail client for exchanging short encrypted messages
EOF
		;;
	keys)
		cat "$active_dir"/$user.conf/public_keys | cut -d " " -f 1
		;;
	addpub)
		if [ ! "$2" ]; then
			echo "No username entered, for whom the public key will be generated"
			exit 4
		fi
		futurepub="$2"
		if [ "$(grep -o "^$futurepub .*" $active_dir/$user.conf/public_keys)" ]; then
			echo "The public key for user $futurepub will be changed. You will need to enter the current key for this user and also notify the user that you have replaced their key. Continue?"
			read -rp "? [y/N] " q_change_pub
			case "$q_change_pub" in
				"" | N* | n*)
					exit 0
					;;
				Y* | y*)
					public_user="$futurepub"
					read -rps "Enter the current public key of user $futurepub: " public_key
					check_public_key
					read -rps "Enter the new public key for user $futurepub: " future_public_key
					if [ -z "$future_public_key" ]; then
						echo "No encryption key entered"
						exit 3
					fi
					sed '/'$futurepub' .*/ d' -i "$active_dir"/$user.conf/public_keys
					cat <<EOF >>"$active_dir"/$user.conf/public_keys
$public_user $(genrandom | openssl enc -k "$future_public_key" -aes256 -base64 -A -e -out - -pbkdf2)
EOF
					if [ -z "$(ls -A "$active_dir"/$user/public | grep -o ".*=$public_user")" ]; then
						echo "Done."
						exit 0
					else
						for msg in "$active_dir"/$user/public/*"=$public_user"; do
							e_msg="$(echo $msg | grep -o "[^/]*$")"
							author="$public_user"
							id="$(echo "$e_msg" | cut -d "=" -f 1)"
							openssl enc -k "$public_key" -aes256 -base64 -A -d -in $msg -pbkdf2 -out - | openssl enc -k "$future_public_key" -aes256 -base64 -A -e -in - -out $msg.new -pbkdf2
							mv $msg.new $msg
						done
						echo "Done."
						exit 0
					fi
					;;
			esac
		fi
		read -rps "Enter the new public key for user $futurepub: " new_public_key
		if [ -z "$new_public_key" ]; then
			echo "No encryption key entered"
			exit 3
		fi
		cat <<EOF >>"$active_dir"/$user.conf/public_keys
$futurepub $(genrandom | openssl enc -k "$new_public_key" -aes256 -base64 -A -e -out - -pbkdf2)
EOF
		;;
	rempub)
		if [ ! "$2" ]; then
			echo "No username entered, for whom the public key will be generated"
			exit 4
		fi
		futurepub="$2"
		if [ ! "$(grep -o "^$futurepub .*" $active_dir/$user.conf/public_keys)" ]; then
			echo "User $futurepub not found in public key file"
			exit 4
		fi
		sed '/'$futurepub' .*/ d' -i "$active_dir"/$user.conf/public_keys
		for msg in "$active_dir"/$user/public/*"=$futurepub"; do
			mv $msg
			sed '/.*='$futurepub'/ d' -i "$active_dir"/$user.conf/journal
		done
		echo "Done."
		exit 0
		;;
	listpub)
		if [ -z "$(ls -A "$active_dir"/$user/public)" ]; then
			echo "No posts"
			exit 0
		fi
		highest_id="$(ls -A $active_dir/$user/public | sort -V | sed '$!d' | cut -d "=" -f 1)"
		for msg in "$active_dir"/$user/public/*; do
			e_msg="$(echo $msg | grep -o "[^/]*$")"
			author="$(echo "$e_msg" | cut -d "=" -f 2)"
			id="$(echo "$e_msg" | cut -d "=" -f 1)"
			if [ "$(grep -o ""$id"="$author"" $active_dir/$user.conf/journal)" ]; then
				echo -e "\e[1;30m[\e[0;31m.\e[1;30m]\e[0m     "$id" by \e[4m"$author"\e[0m"
			else
				if [ $id != $highest_id ]; then
					echo -e "\e[1m[\e[1;34m+\e[0m\e[1m]\e[0m     "$id" by \e[4m"$author"\e[0m"
				else
					echo -e "\e[0;32m[\e[1;33m!\e[0;32m]\e[0m     "$id" by \e[4m"$author"\e[0m"
				fi
			fi
		done
		;;
	rmmsg)
		if [ -z "$(ls -A "$active_dir"/$user/{public,private})" ]; then
			echo "No posts"
			exit 0
		fi
		if [ ! "$2" ]; then
			echo "Operation not specified"
			exit 4
		fi
		case "$2" in
			pub*)
				for msg in ${@:3}; do
					if [ ! "$(ls -A "$active_dir"/$user/public | grep -o "^$msg=.*")" ]; then
						echo "Message with this ID($msg) not found"
						continue
					else
						id="$(ls -A "$active_dir"/$user/public | grep -o "^$msg=.*")"
						rm "$active_dir"/$user/public/$id
						sed '/'$id'/ d' -i "$active_dir"/$user.conf/journal
					fi
				done
				;;
			pri* | prv*)
				for msg in ${@:3}; do
					if [ ! "$(ls -A "$active_dir"/$user/private | grep -o "^$msg=.*")" ]; then
						echo "Message with this ID not found"
						continue
					else
						id="$(ls -A "$active_dir"/$user/private | grep -o "^$msg=.*")"
						rm "$active_dir"/$user/private/$id
					fi
				done
				;;
		esac
		;;
	listprv)
		if [ -z "$(ls -A "$active_dir"/$user/private)" ]; then
			echo "No posts"
			exit 0
		fi
		highest_id="$(ls -A $active_dir/$user/private | sort -V | sed '$!d' | cut -d "=" -f 1)"
		for msg in "$active_dir"/$user/private/*; do
			e_msg="$(echo $msg | grep -o "[^/]*$")"
			author="$(echo "$e_msg" | cut -d "=" -f 3)"
			id="$(echo "$e_msg" | cut -d "=" -f 1)"
			oid="$(echo "$e_msg" | cut -d "=" -f 2)"
			echo -e "\e[1;30m[\e[1;32m.\e[1;30m]\e[0m     "$id"("$oid") to \e[4m"$author"\e[0m"
		done
		;;
	readpub)
		#ask_private_key
		#check_private_key
		if [ ! "$2" ]; then
			echo "Message ID not specified"
			exit 4
		fi
		id="$2"
		if [ ! "$(ls -A $active_dir/$user/public | grep -o "^$id=.*")" ]; then
			echo "There is no message with this ID"
			exit 5
		fi
		author="$(ls -A $active_dir/$user/public | grep -o "^$id=.*" | cut -d "=" -f 2)"
		if [ "$PUB_EX" == 1 ]; then
			PUBKEY="$(grep $HOME/.mail_tty.pub "^$author .*" | cut -d " " -f 2)"
		else
			ask_public_key
			public_user="$author" check_public_key
		fi
		less -c -r -f <(
			echo -e "ID: $id\nAuthor: $author"
			openssl enc -k "$public_key" -aes256 -base64 -A -d -in "$active_dir/$user/public/"$id"=$author" -out - -pbkdf2
		) || exit 1
		if [ ! "$(grep -o ""$id"="$author"" "$active_dir"/$user.conf/journal)" ]; then
			echo ""$id"="$author"" >>"$active_dir"/$user.conf/journal
		fi
		;;
	readprv)
		ask_private_key
		check_private_key
		if [ ! "$2" ]; then
			echo "Message ID not specified"
			exit 4
		fi
		id="$2"
		if [ ! "$(ls -A $active_dir/$user/private | grep -o "^$id=.*")" ]; then
			echo "There is no message with this ID"
			exit 5
		fi
		author="$(ls -A $active_dir/$user/private | grep -o "^$id=.*" | cut -d "=" -f 3)"
		oid="$(ls -A $active_dir/$user/private | grep -o "^$id=.*" | cut -d "=" -f 2)"
		chmod 700 "$active_dir"/$user/private/""$id"="$oid"="$author""
		less -c -r -f <(
			echo -e "ID: $id\nRecipient ID: $oid\nAuthor: $author"
			openssl enc -k "$entered_key" -aes256 -base64 -A -d -in "$active_dir/$user/private/$id=$oid=$author" -out - -pbkdf2
		) || exit 1
		;;
	write)
		ask_private_key
		check_private_key
		if [ ! "$2" ]; then
			echo "Recipient not specified"
			exit 4
		fi
		public_user="$2"
		if [ ! -d "$active_dir"/$user ]; then
			echo "Recipient mail directory not found"
			exit 4
		fi
		if [ "$(grep "^$user .*" "$active_dir"/$public_user.conf/public_keys)" ]; then
			author="$public_user" ask_public_key
			check_public_send_key
		else
			echo "Your name was not found in the public key files of user $public_user/or incorrect encryption key entered. Ask him to add you, or change the key"
			exit 4
		fi
		[ -n "$EDITOR" ] || EDITOR=vi
		[ "$(command -v $EDITOR)" ] || EDITOR=nano
		[ "$(command -v $EDITOR)" ] || EDITOR=vim
		temp_file="$active_dir/$user/$(openssl rand -hex 20)"
		touch $temp_file
		chmod 600 $temp_file
		read -rp "Enter a subject for your letter: " subject
		echo 'Subject: '$subject'' >$temp_file
		echo 'Date: '$(date "+%c")'' >>$temp_file
		$EDITOR $temp_file
		freemsg="$(($(ls -A $active_dir/$public_user/public | cut -d "=" -f 1 | sort -V | sed '$!d') + 1))"
		openssl enc -k "$public_key" -aes256 -base64 -A -e -in "$temp_file" -out $active_dir/$public_user/public/"$freemsg=$user" -pbkdf2 || {
			echo "Something went wrong while sending message"
			rm $temp_file
			exit 6
		}
		pfreemsg="$(($(ls -A $active_dir/$user/private | cut -d "=" -f 1 | sort -V | sed '$!d') + 1))"
		openssl enc -k "$entered_key" -aes256 -base64 -A -e -in "$temp_file" -out $active_dir/$user/private/"$pfreemsg=$freemsg=$public_user" -pbkdf2 || {
			echo "Something went wrong while saving message"
			rm $temp_file
			exit 6
		}
		rm $temp_file
		chmod 700 $active_dir/$user/private/"$pfreemsg=$freemsg=$public_user"
		chmod 004 $active_dir/$public_user/public/"$freemsg=$user"
		;;
	*)
		echo -e "Unknown argument. Try \e[0;31mmail help\e[0m"
		exit 0
		;;
esac
